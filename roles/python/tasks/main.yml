---
- name: Install Required Packages | Homebrew
  package: name={{ item }} state=latest
  with_items: python_required_packages[ansible_distribution | lower] | default([])
  when: ansible_distribution == 'MacOSX'

- name: Install Required Packages | Packages
  package: name={{ item }} state=latest
  become: yes
  with_items: python_required_packages[ansible_distribution | lower] | default([])
  when: ansible_distribution != 'MacOSX'

- name: Create Pip Directory
  file: path={{ python_pip_config_directory }} state=directory
  tags: python-pip-config

- name: Configure Pip
  template: src=pip.conf.j2 dest={{ python_pip_config_file}}
  tags: python-pip-config

- name: Install Python Versions
  shell: "{{ python_install_command }} {{ item }}"
  args:
    creates: "{{ python_versions_directory }}/{{ item }}"
  tags: python-install
  with_items: python_versions
  notify: rehash pyenv

- name: Configure Default Version
  template: src=version.j2 dest={{ pyenv_root_directory }}/version
  when: python_default_version is defined
  tags: python-install, python-default-version
  notify: rehash pyenv

- name: Install Default Packages
  pip: name={{ item[1] }} executable={{ pyenv_versions_directory }}/{{ item[0] }}/bin/pip state=latest
  tags: python-install, python-default-packages
  with_nested:
    - python_versions
    - python_default_packages
  notify: rehash pyenv
